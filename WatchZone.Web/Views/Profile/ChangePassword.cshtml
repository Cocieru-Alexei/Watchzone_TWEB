@model WatchZone.Web.Models.Profile.ChangePasswordViewModel

@{
    ViewBag.Title = "Change Password";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4><i class="fas fa-key"></i> Change Password</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(m => m.CurrentPassword, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control", placeholder = "Enter your current password" })
                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.NewPassword, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @id = "NewPassword", placeholder = "Enter your new password" })
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                            <div class="form-text">Password must be at least 8 characters long.</div>
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.ConfirmNewPassword, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control", placeholder = "Confirm your new password" })
                            @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Change Password
                            </button>
                            <a href="@Url.Action("Index", "Profile")" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Profile
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Client-side validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Password strength indicator
        document.getElementById('NewPassword').addEventListener('input', function() {
            var password = this.value;
            var strength = 0;
            
            if (password.length >= 8) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;
            
            var strengthText = '';
            var strengthClass = '';
            
            switch(strength) {
                case 0:
                case 1:
                    strengthText = 'Very Weak';
                    strengthClass = 'text-danger';
                    break;
                case 2:
                    strengthText = 'Weak';
                    strengthClass = 'text-warning';
                    break;
                case 3:
                    strengthText = 'Fair';
                    strengthClass = 'text-info';
                    break;
                case 4:
                    strengthText = 'Good';
                    strengthClass = 'text-primary';
                    break;
                case 5:
                    strengthText = 'Strong';
                    strengthClass = 'text-success';
                    break;
            }
            
            var indicator = document.getElementById('password-strength');
            if (!indicator) {
                indicator = document.createElement('div');
                indicator.id = 'password-strength';
                indicator.className = 'form-text';
                this.parentNode.appendChild(indicator);
            }
            
            if (password.length > 0) {
                indicator.innerHTML = 'Password strength: <span class="' + strengthClass + '">' + strengthText + '</span>';
            } else {
                indicator.innerHTML = '';
            }
        });
    </script>
} 